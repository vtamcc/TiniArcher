{"version":3,"sources":["assets/TiniArcher/scripts/TiniArcher.ColliderManager.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAI5E,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAiD,uCAAY;IAA7D;;IAiDA,CAAC;IA7CG,oCAAM,GAAN;QACI,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;IACrD,CAAC;IAED,mCAAK,GAAL;IAEA,CAAC;IAED,8CAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QACxB,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE;YAChB,IAAI,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;YAC1D,cAAc,CAAC,YAAY,GAAG,CAAC,CAAC;YAChC,cAAc,CAAC,cAAc,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,cAAc,CAAC,eAAe,GAAG,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;YAC9B,+BAA+B;YAC/B,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;YAE5C,2EAA2E;YAC3E,IAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;YACjE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;YAElD,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,UAAU,CAAC,CAAA;YAC9B,6BAA6B;YAC7B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAEhB,sBAAsB;YAEtB,sBAAsB;YAItB,yCAAyC;SAS5C;IAEL,CAAC;IA/CgB,mBAAmB;QADvC,OAAO;OACa,mBAAmB,CAiDvC;IAAD,0BAAC;CAjDD,AAiDC,CAjDgD,EAAE,CAAC,SAAS,GAiD5D;kBAjDoB,mBAAmB","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport TiniArcher_GameView from \"./game/TiniArcher.GameView\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TiniArcher_Collider extends cc.Component {\n\n\n\n    onLoad() {\n        cc.director.getCollisionManager().enabled = true;\n    }\n\n    start() {\n\n    }\n\n    onCollisionEnter(other, self) {\n        if (other.tag == 1) {\n            let arrowRigidBody = self.node.getComponent(cc.RigidBody);\n            arrowRigidBody.gravityScale = 0;\n            arrowRigidBody.linearVelocity = cc.v2(0, 0);\n            arrowRigidBody.angularVelocity = 0;\n            self.node.parent = other.node;\n            // Lấy vị trí va chạm chính xác\n            let collisionPoint = self.world.aabb.center;\n    \n            // Chuyển đổi tọa độ va chạm từ không gian thế giới sang không gian của bia\n            let localPoint = other.node.convertToNodeSpaceAR(collisionPoint);\n            self.node.setPosition(localPoint.x, localPoint.y);\n           \n            console.log(\"old \",localPoint)\n            // Giữ nguyên góc của mũi tên\n            self.node.angle;\n    \n            // Gắn mũi tên vào bia\n          \n            // Gắn mũi tên vào bia\n           \n        \n    \n            // Gắn mũi tên vào bia để nó không rơi ra\n           \n    \n         \n        \n\n    \n           \n\n        }\n\n    }\n    // update (dt) {}\n}\n"]}