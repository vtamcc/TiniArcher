{"version":3,"sources":["assets/TiniArcher/scripts/game/TiniArcher.GameView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TiniArcher_GameView extends cc.Component {\n    public static instance: TiniArcher_GameView = null;\n    @property(cc.ProgressBar)\n    pgbPowerBar: cc.ProgressBar = null;\n\n    @property(cc.Node)\n    nArrow: cc.Node = null;\n\n    @property(cc.Node)\n    nbullseye: cc.Node = null;\n\n    @property(cc.Node)\n    nTrajectoryNode: cc.Node = null;\n\n    @property(cc.Prefab)\n    pfCircle: cc.Prefab = null;\n\n    maxForce = 1000;\n    maxAngle = 45;\n    startForce = 0;\n    startAngle = 0;\n    currentForce = 0;\n    currentAngle = 0;\n    isCharging = false;\n\n\n    onLoad() {\n        TiniArcher_GameView.instance = this;\n        cc.director.getPhysicsManager().enabled = true;\n        cc.director.getPhysicsManager().debugDrawFlags = cc.PhysicsManager.DrawBits.e_shapeBit;\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    onTouchStart(event: cc.Touch) {\n        this.isCharging = true;\n    }\n\n\n    onTouchEnd(event: cc.Touch) {\n        this.isCharging = false;\n        this.nTrajectoryNode.removeAllChildren();    \n        this.updatePowerBar();   \n       \n    }\n\n    trajectoryCircle(points) {\n        this.nTrajectoryNode.removeAllChildren();\n        points.forEach(e => {\n            let cricle = cc.instantiate(this.pfCircle)\n            cricle.setPosition(e);\n            this.nTrajectoryNode.addChild(cricle);\n        })\n    }\n    \n    updateTrajectory(force, angle) {\n        let points = [];\n        let startPosition = this.nArrow.position; \n        for(let i = 0; i < 30; i++) {\n            let t = i * 0.03;\n            let x = startPosition.x + force * Math.cos(angle * Math.PI / 180) * t;\n            let y =  startPosition.y + force * Math.sin(angle * Math.PI / 180) * t - 0.5 * 980 * t * t;\n            points.push(cc.v2(x,y));\n        }\n        return points;\n    }\n\n    updateAngleArrow(angle) {\n        this.nArrow.angle = angle;\n    }\n\n    updatePowerBar() {\n        this.pgbPowerBar.progress = this.currentForce/this.maxForce;\n    }\n\n    updateArrowPos() {\n        let newY = this.startAngle + (this.currentAngle / this.maxAngle) * 100\n        //let newX = this.startAngle - (this.currentAngle / this.maxAngle) * 5;\n        this.nArrow.setPosition(this.nArrow.x, newY);\n    }\n    resetArrowPosition() {\n        this.nArrow.setPosition(this.nArrow.x, this.currentAngle);\n    }\n    \n    update(dt) {\n        if(this.isCharging) {\n            this.currentForce = Math.min(this.currentForce + 1000 * dt, this.maxForce);\n            this.currentAngle = Math.min(this.currentAngle + 45 * dt, this.maxAngle);\n            this.trajectoryCircle(this.updateTrajectory(this.currentForce,this.currentAngle));\n            this.updateAngleArrow(this.currentAngle)\n            this.updateArrowPos();\n        }else {\n            this.currentForce = Math.max(this.currentForce - 1000 * dt, this.startForce);\n            this.currentAngle = Math.max(this.currentAngle - 45 * dt,this.startAngle);\n            this.updateAngleArrow(this.currentAngle)\n            this.resetArrowPosition();\n        }\n        this.updatePowerBar();\n    }\n\n    \n}"]}