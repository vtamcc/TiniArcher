{"version":3,"sources":["assets\\TiniArcher\\scripts\\game\\TiniArcher.GameView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TiniArcher_GameView extends cc.Component {\r\n\r\n    @property(cc.ProgressBar)\r\n    pgbPowerBar: cc.ProgressBar = null;\r\n\r\n    @property(cc.Node)\r\n    nArrow: cc.Node = null;\r\n\r\n    maxForce = 1000;\r\n    maxAngle = Math.PI / 4;\r\n    currentForce = 0;\r\n    currentAngle = 0;\r\n    isCharging = false;\r\n    chargeRate = 50;\r\n    angleRate = 0.5;\r\n\r\n    onLoad() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n    }\r\n\r\n    onTouchStart(event: cc.Touch) {\r\n        this.isCharging = true;\r\n        this.currentForce = 0;\r\n        this.currentAngle = 0;\r\n        this.pgbPowerBar.progress = 0;\r\n\r\n        this.schedule(this.increaseForceAndAngle, 0.1);\r\n    }\r\n\r\n    onTouchEnd(event: cc.Touch) {\r\n        this.isCharging = false;\r\n        this.shootArrow(this.currentForce, this.currentAngle);\r\n        this.pgbPowerBar.progress = 0;\r\n        this.unschedule(this.increaseForceAndAngle);\r\n    }\r\n\r\n    increaseForceAndAngle() {\r\n        if (this.isCharging) {\r\n            this.currentForce = Math.min(this.currentForce + this.chargeRate, this.maxForce);\r\n            this.currentAngle = Math.min(this.currentAngle + this.angleRate, this.maxAngle);\r\n\r\n            this.pgbPowerBar.progress = this.currentForce / this.maxForce;\r\n\r\n            this.nArrow.angle = +cc.misc.radiansToDegrees(this.currentAngle);\r\n        }\r\n    }\r\n\r\n    shootArrow(force: number, angle: number) {\r\n        let rigidBody = this.nArrow.getComponent(cc.RigidBody);\r\n        if (rigidBody) {\r\n            const velocity = cc.v2(Math.cos(angle) * force * 10, Math.sin(angle) * force * 10);\r\n            //console.log(\"Calculated velocity:\", velocity);\r\n            rigidBody.linearVelocity = velocity;\r\n            console.log(\"Arrow velocity after shoot:\", rigidBody.linearVelocity);\r\n        } else {\r\n            console.error(\"nArrow does not have a RigidBody component!\");\r\n        }\r\n        \r\n\r\n    }\r\n}"]}