{"version":3,"sources":["assets\\TiniArcher\\scripts\\game\\TiniArcher.GameView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport TiniArcher_Arrow from \"./TiniArcher.Arrow\";\r\nimport { Global } from \"./TiniArcher.Global\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TiniArcher_GameView extends cc.Component {\r\n\r\n\r\n    @property(cc.ProgressBar)\r\n    pgbPowerBar: cc.ProgressBar = null;\r\n\r\n    maxForce = 1000;  // Lực bắn tối đa\r\n    maxAngle = Math.PI / 4;  // Góc tối đa (45 độ)\r\n    currentForce = 0;\r\n    currentAngle = 0;\r\n    isCharging = false;\r\n    chargeRate = 50; // Tốc độ tăng lực\r\n    angleRate = 0.5; // Tốc độ tăng góc\r\n    // powerBar = null;\r\n    trajectoryNode = null;\r\n    onLoad() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n\r\n    }\r\n\r\n\r\n    onTouchStart(event: cc.Touch) {\r\n        this.isCharging = true;\r\n        this.currentForce = 0;\r\n        this.currentAngle = 0;\r\n        this.pgbPowerBar.progress = 0;\r\n\r\n        this.schedule(this.increaseForceAndAngle, 0.1);\r\n        console.log(this.isCharging)\r\n    }\r\n\r\n    onTouchEnd(event: cc.Touch) {\r\n        this.isCharging = false;\r\n        //this.shootArrow(this.currentForce, this.currentAngle);\r\n        console.log(this.isCharging)\r\n        this.pgbPowerBar.progress = 0;\r\n        this.unschedule(this.increaseForceAndAngle);\r\n        this.increaseForceAndAngle();\r\n    }\r\n\r\n    increaseForceAndAngle() {\r\n        if (this.isCharging) {\r\n            //Tăng lực và góc\r\n            this.currentForce = Math.min(this.currentForce + this.chargeRate, this.maxForce);\r\n            this.currentAngle = Math.min(this.currentAngle + this.angleRate, this.maxAngle);\r\n            console.log(\"Luc ban \", this.currentForce)\r\n            console.log(\"Goc ban \", this.currentAngle)\r\n            // Cập nhật thanh lực dựa trên lực hiện tại\r\n            this.pgbPowerBar.progress = this.currentForce / this.maxForce;\r\n\r\n            console.log(\"progress \", this.pgbPowerBar.progress);\r\n\r\n            // Cập nhật quỹ đạo\r\n            //this.updateTrajectory(this.currentForce, this.currentAngle);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}