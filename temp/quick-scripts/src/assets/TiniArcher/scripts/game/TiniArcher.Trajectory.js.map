{"version":3,"sources":["assets/TiniArcher/scripts/game/TiniArcher.Trajectory.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport TiniArcher_Trajectory from \"./TiniArcher.Trajectory\";\n\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TiniArcher_GameView extends cc.Component {\n    public static instance: TiniArcher_GameView = null;\n    @property(cc.ProgressBar)\n    pgbPowerBar: cc.ProgressBar = null;\n\n    @property(cc.Node)\n    nArrow: cc.Node = null;\n\n    @property(cc.Node)\n    nbullseye: cc.Node = null;\n\n    @property(cc.Node)\n    nTrajectoryNode: cc.Node = null;\n\n    @property(cc.Prefab)\n    pfCircle: cc.Prefab = null;\n\n    maxForce = 1000;\n    maxAngle = 45;\n    startForce = 0;\n    startAngle = 0;\n    gravity = -9.8;\n    currentForce = 100;\n    currentAngle = 0;\n    isCharging = false;\n\n\n    onLoad() {\n        TiniArcher_GameView.instance = this;\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    onTouchStart(event: cc.Touch) {\n        this.isCharging = true;\n        this.currentForce = 100;\n        this.currentAngle = 0;\n        this.pgbPowerBar.progress = 0;\n        this.trajectory(this.updateTrajcetor(this.forceVec(this.currentAngle,this.currentAngle)));\n        this.schedule(this.increaseForceAndAngle, 0.05);\n        \n    }\n\n    onTouchEnd(event: cc.Touch) {\n        this.isCharging = false;\n        console.log(\"toc do ban \", this.currentForce);\n        this.pgbPowerBar.progress = 0;\n        this.nArrow.angle = 0;\n        this.unschedule(this.increaseForceAndAngle);\n       \n        \n    }\n\n    increaseForceAndAngle() {\n        if (this.isCharging) {\n            this.currentForce = Math.min(this.currentForce + 50, this.maxForce);\n            this.currentAngle = Math.min(this.currentAngle + 1, this.maxAngle);\n            this.pgbPowerBar.progress = this.currentForce/this.maxForce;\n            console.log(\"this prg \",this.pgbPowerBar.progress);\n        }\n    }\n\n    trajectory(points) {\n        let parentNode = this.nTrajectoryNode;\n        parentNode.removeAllChildren();\n        points.forEach(point => {\n            let cricle = cc.instantiate(this.pfCircle)\n            cricle.setPosition(point);\n            parentNode.addChild(cricle);\n        });\n    }    \n\n    updateTrajcetor(force: cc.Vec2) {\n        let points = [];\n        let initialPosition = this.nTrajectoryNode.position;\n\n        for(let i = 0; i < 50; i++) {\n            let t = i * 0.1;\n            let x = initialPosition.x * t + force.x;\n            let y = initialPosition.y * t + 0.5 * -9.8 * t * t + force.y;\n            points.push(cc.v2(x, y))\n        }\n        return points;\n    }\n\n    forceVec(force, angle) {\n        let v = new cc.Vec2(force * Math.cos(angle), force * Math.sin(angle));\n        return v;\n    }\n    // }\n\n    // trajectoryCricle(points) {\n    //     let parentNode = this.nTrajectoryNode;\n    //     parentNode.removeAllChildren();\n    //     points.forEach(point => {\n    //         let cricle = cc.instantiate(this.pfCircle)\n    //         cricle.setPosition(point);\n    //         parentNode.addChild(cricle);\n    //     });\n    // }\n    // }\n    update(dt) {\n        \n    }\n}"]}